#!/bin/zsh
# vim: foldmethod=marker
set -o noclobber
stty -ixon

# plugins {{{
PLUGINS_DIR=/usr/share/zsh/plugins
PLUGINS=(
	zsh-autosuggestions
	zsh-syntax-highlighting
	zsh-history-substring-search
)
for plugin in ${PLUGINS}; do

	plugin_init="${PLUGINS_DIR}/${plugin}/${plugin}.zsh"

	[ -f "${plugin_init}" ] && source "${plugin_init}" || echo "Unable to load ${plugin}"
done
zmodload -i zsh/complist
# }}}

# autoload {{{
fpath=("${XDG_DATA_HOME}/zsh" ${fpath})
autoload -U compinit; compinit -d "${XDG_CACHE_HOME}/zsh/zcompdump-${ZSH_VERSION}"
autoload -U up-line-or-beginning-search
autoload -U vcs_info
autoload -U down-line-or-beginning-search
autoload -U edit-command-line
# }}}

# zle {{{
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
zle -N edit-command-line
zle -N zle-line-init
zle -N zle-keymap-select
# }}}

# setopt {{{
setopt NO_BEEP
setopt PROMPT_SUBST
setopt ALWAYS_TO_END
setopt COMPLETE_ALIASES
setopt COMPLETE_IN_WORD
setopt MENU_COMPLETE
setopt COMPLETE_ALIASES
setopt EXTENDED_HISTORY
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_REDUCE_BLANKS
setopt HIST_FIND_NO_DUPS
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
setopt HIST_IGNORE_DUPS
setopt SHARE_HISTORY
# }}}

# bindkey {{{
bindkey "^[[3~" delete-char
bindkey '^ ' autosuggest-accept
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward
bindkey '^R' history-incremental-search-backward
bindkey '^S' history-incremental-search-forward
bindkey -v
bindkey -v '^?' backward-delete-char
bindkey -M vicmd v edit-command-line
bindkey -M vicmd "^[[3~" delete-char
bindkey -M vicmd 'k' history-beginning-search-backward
bindkey -M vicmd 'j' history-beginning-search-forward
bindkey -M menuselect '^[[Z' reverse-menu-complete
bindkey -M menuselect '^P' reverse-menu-complete
bindkey -M menuselect '^N' expand-or-complete
bindkey -M menuselect '^M' .accept-line
bindkey -M menuselect '\e' send-break
# }}}

# zstyle {{{
zstyle ':completion:*' file-list all
zstyle ':vcs_info:git:*' formats '%b'
zstyle ':completion:*' menu select
zstyle ':completion:*' insert-tab false
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' cache-path "${XDG_CACHE_HOME}/zsh/zcompcache"
zstyle ':completion:*:*:t:*' verbose yes
zstyle ':completion:*:*:t:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:*:t:*' group-name ''
compdef _task t=task
# }}}

# prompt {{{
precmd_functions+=( vcs_info )

function zle-line-init zle-keymap-select {
	PROMPT='%B'
	RPROMPT='%B'

	case ${KEYMAP} in
		vicmd)      PROMPT+='%F{green}[N]%f '; echo -ne '\e[1 q';;
		main|viins) PROMPT+='%F{magenta}[I]%f '  ; echo -ne '\e[5 q';;
		*)          PROMPT+='';;
	esac

	# PROMPT+='%(L.%L.) '
	PROMPT+='%F{red}%n%f'
	PROMPT+='@'
	PROMPT+='%F{blue}%m%f'
	PROMPT+=': '
	PROMPT+='%F{green}%6(~.………/%2d.%~)%f '
	PROMPT+='%(!.#.$) '

	if git rev-parse --git-dir > /dev/null 2>&1; then
		PROMPT+="%F{yellow}(\$vcs_info_msg_0_)%f "
	fi

	if [ "${VIRTUAL_ENV}" ]; then
		RPROMPT+='%F{magenta}[venv:${VIRTUAL_ENV}]%f'
	fi
	RPROMPT+='%F{yellow}%(?..[%?])%f'

	PROMPT+='%b'
	RPROMPT+='%b'
	zle reset-prompt
}
# }}}

source "${XDG_CONFIG_HOME}/sh/aliasrc"
[ -f "${XDG_CONFIG_HOME}/sh/functions" ] && source "${XDG_CONFIG_HOME}/sh/functions"
alias help="run-help"
alias h="history 1"

gpg-connect-agent updatestartuptty /bye &>/dev/null
export GPG_TTY="$(tty)"
